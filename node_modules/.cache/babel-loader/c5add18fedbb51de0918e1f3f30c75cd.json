{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git\\\\2019-Dev\\\\tictactoe-react\\\\src\\\\components\\\\board\\\\Board.js\";\nimport React, { Component } from 'react';\nimport Square from '../square/Square';\nimport './Board.css';\n\nclass Board extends Component {\n  constructor() {\n    super();\n    this.XPLAYER_TURN = 'Player X\\'s Turn!';\n    this.OPLAYER_TURN = 'Player O\\'s Turn!';\n    this.state = {\n      isGameOver: false,\n      gameStatusMessage: this.XPLAYER_TURN,\n      squareEnum: {\n        EMPTY: '',\n        xPlayer: 'X',\n        oPlayer: 'O'\n      },\n      currentPlayer: 'X',\n      board: ['', '', '', '', '', '', '', '', ''],\n      squareIndex: null\n    };\n  }\n\n  updateBoard(squareIndex) {\n    this.setSquareItem(squareIndex);\n  }\n\n  setSquareItem(squareIndex) {\n    let updatedBoard = this.state.board;\n    updatedBoard[squareIndex] = this.state.currentPlayer;\n    this.setState({\n      board: updatedBoard\n    });\n  }\n\n  render() {\n    return this.createBoard();\n  }\n\n  createBoard() {\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gameStatusMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.gameStatusMessage), this.state.board.map(function (squareItem, squareIndex) {\n      return React.createElement(Square, {\n        key: squareIndex,\n        squareIndex: squareIndex,\n        squareItem: squareItem,\n        updateBoard: this.updateBoard.bind(this),\n        currentPlayer: this.state.currentPlayer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }.bind(this)));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["E:\\Git\\2019-Dev\\tictactoe-react\\src\\components\\board\\Board.js"],"names":["React","Component","Square","Board","constructor","XPLAYER_TURN","OPLAYER_TURN","state","isGameOver","gameStatusMessage","squareEnum","EMPTY","xPlayer","oPlayer","currentPlayer","board","squareIndex","updateBoard","setSquareItem","updatedBoard","setState","render","createBoard","map","squareItem","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAK5BG,EAAAA,WAAW,GAAI;AACb;AADa,SAHfC,YAGe,GAHA,mBAGA;AAAA,SAFfC,YAEe,GAFA,mBAEA;AAGb,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAG,KADF;AAEXC,MAAAA,iBAAiB,EAAG,KAAKJ,YAFd;AAGXK,MAAAA,UAAU,EAAG;AAACC,QAAAA,KAAK,EAAG,EAAT;AAAaC,QAAAA,OAAO,EAAG,GAAvB;AAA4BC,QAAAA,OAAO,EAAG;AAAtC,OAHF;AAIXC,MAAAA,aAAa,EAAG,GAJL;AAKXC,MAAAA,KAAK,EAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,CALG;AAMXC,MAAAA,WAAW,EAAG;AANH,KAAb;AAQD;;AAEDC,EAAAA,WAAW,CAACD,WAAD,EAAc;AACvB,SAAKE,aAAL,CAAmBF,WAAnB;AACD;;AAEDE,EAAAA,aAAa,CAACF,WAAD,EAAc;AACzB,QAAIG,YAAY,GAAG,KAAKZ,KAAL,CAAWQ,KAA9B;AACAI,IAAAA,YAAY,CAACH,WAAD,CAAZ,GAA4B,KAAKT,KAAL,CAAWO,aAAvC;AACA,SAAKM,QAAL,CAAc;AACZL,MAAAA,KAAK,EAAGI;AADI,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKC,WAAL,EAAP;AACD;;AAEDA,EAAAA,WAAW,GAAG;AACZ,WACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,KAAKf,KAAL,CAAWE,iBAA/C,CADF,EAEG,KAAKF,KAAL,CAAWQ,KAAX,CAAiBQ,GAAjB,CAAqB,UAAUC,UAAV,EAAsBR,WAAtB,EAAmC;AACvD,aAAQ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,WAAb;AAA0B,QAAA,WAAW,EAAEA,WAAvC;AAAoD,QAAA,UAAU,EAAEQ,UAAhE;AAA4E,QAAA,WAAW,EAAE,KAAKP,WAAL,CAAiBQ,IAAjB,CAAsB,IAAtB,CAAzF;AAAsH,QAAA,aAAa,EAAE,KAAKlB,KAAL,CAAWO,aAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD,KAFqB,CAEpBW,IAFoB,CAEf,IAFe,CAArB,CAFH,CADA;AAQD;;AA3C2B;;AA8C9B,eAAetB,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Square from '../square/Square';\r\nimport './Board.css';\r\n\r\nclass Board extends Component {\r\n\r\n  XPLAYER_TURN = 'Player X\\'s Turn!';\r\n  OPLAYER_TURN = 'Player O\\'s Turn!';\r\n\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      isGameOver : false,\r\n      gameStatusMessage : this.XPLAYER_TURN,\r\n      squareEnum : {EMPTY : '', xPlayer : 'X', oPlayer : 'O'},\r\n      currentPlayer : 'X',\r\n      board : ['','','','','','','','',''],\r\n      squareIndex : null\r\n    }\r\n  }\r\n  \r\n  updateBoard(squareIndex) {\r\n    this.setSquareItem(squareIndex);\r\n  }\r\n\r\n  setSquareItem(squareIndex) {\r\n    let updatedBoard = this.state.board;\r\n    updatedBoard[squareIndex] = this.state.currentPlayer;\r\n    this.setState({\r\n      board : updatedBoard\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return this.createBoard();\r\n  }\r\n\r\n  createBoard() {\r\n    return (\r\n    <div className=\"board\">\r\n      <div className=\"gameStatusMessage\">{this.state.gameStatusMessage}</div>\r\n      {this.state.board.map(function (squareItem, squareIndex) {\r\n        return (<Square key={squareIndex} squareIndex={squareIndex} squareItem={squareItem} updateBoard={this.updateBoard.bind(this)} currentPlayer={this.state.currentPlayer} />);\r\n      }.bind(this))}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}